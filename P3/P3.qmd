---
title: "P3: Trip Generation"
format: 
  html:
    theme: minty
    toc: true
    toc-location: left
editor: visual
---

The purpose of this assignment is for you to get some experience estimating and interpreting regression models for count data by

-   Reading the documentation for the trip generation submodel of the Boston Region Metropolitan Planning Organization's regional travel demand model ([TDM23](https://www.ctps.org/travel-demand-model)),

-   Estimating one or more trip generation models for a trip purpose that is not represented in TDM23.

-   Interpreting the model results to explain the influence that household and built-environment characteristics have on trip generation for the trip purpose you have selected.

## Load libraries

This analysis uses the following packages:

```{r, warning=FALSE, message=FALSE}

library(tidyverse)
library(here)
library(knitr)
library(srvyr)
library(mlogit)
library(caret)
library(pscl)
library(stargazer)
library(texreg)



here("code",
     "mlogit_helpers.R") |>
  source()
```

## Load datasets

This analysis uses household-level, person-level, and trip-level data from the 2017 National Household Travel Survey. Keep in mind that TDM23 is meant to represent travel on a "typical weekday", so for comparison purposes, we'll filter our data to only include participants who completed their travel diary on a weekday.

```{r}
# Load and filter household data for weekdays
hh_data <- here("data", "NHTS", "hhpub.csv") |>
  read_csv(show_col_types = FALSE) |>
  filter(TRAVDAY != "01", TRAVDAY != "07") |>
  select(HOUSEID, HHSIZE, LIF_CYC, HHFAMINC, HHVEHCNT, DRVRCNT, HBRESDN, HBPPOPDN, URBAN, HHSTATE) |>
  mutate(
    income_group = case_when(
      HHFAMINC %in% c("01","02","03") ~ "Low",
      HHFAMINC %in% c("04","05","06","07","08") ~ "Middle",
      TRUE ~ "High"
    ),
    veh_availability = case_when(
      HHVEHCNT == 0 ~ "No vehicles",
      DRVRCNT > HHVEHCNT ~ "Insufficient",
      TRUE ~ "Sufficient"
    ),
    hh_composition = case_when(
      HHSIZE == 1 ~ "Alone",
      LIF_CYC %in% c("01","02") ~ "Couple Only",
      TRUE ~ "Multigenerational/Other"
    ),
    urban_rural = URBAN,
    pop_density = HBPPOPDN,
    res_density = HBRESDN
  )

# Load and filter person data for seniors (age >= 65) on weekdays
person_data <- here("data", "NHTS", "perpub.csv") |>
  read_csv(show_col_types = FALSE) |>
  filter(TRAVDAY != "01", TRAVDAY != "07", R_AGE >= 65) |>
  mutate(
    age_group = case_when(
      R_AGE >= 65 & R_AGE <= 74 ~ "65-74",
      R_AGE >= 75 & R_AGE <= 84 ~ "75-84",
      R_AGE >= 85 ~ "85+"
    ),
    health_status = recode(HEALTH,
                           "01" = "Excellent", "02" = "Very Good",
                           "03" = "Good", "04" = "Fair", "05" = "Poor"),
    med_condition = if_else(MEDCOND == "01", "Yes", "No"),
    stopped_driving = if_else(CONDRIVE == "01", "Yes", "No"),
    mobility_aid = case_when(
      W_CANE == "01" ~ "Cane",
      W_CHAIR == "01" ~ "Wheelchair",
      W_MTRCHR == "01" ~ "Motorized Wheelchair",
      W_WLKR == "01" ~ "Walker",
      W_SCOOTR == "01" ~ "Scooter",
      TRUE ~ "None"
    )
  ) |>
  select(HOUSEID, PERSONID, age_group, health_status, med_condition,
         stopped_driving, mobility_aid, WKFTPT, R_SEX, OCCAT) |>
  left_join(hh_data, by = "HOUSEID")

trip_data <- here("data", "NHTS", "trippub.csv") |>
  read_csv(show_col_types = FALSE) |>
  filter(TRAVDAY != "01", TRAVDAY != "07") |>
  select(HOUSEID, PERSONID, TDTRPNUM, WHYTO, WHYFROM, TRPTRANS, TRPMILES, WTTRDFIN) |>
  mutate(
    health_trip = if_else(WHYTO == "18" | WHYFROM == "18", "Yes", "No")
  ) |>
  filter(HOUSEID %in% person_data$HOUSEID)

```

## Examine trip purposes

Refer to the TDM23 Structures and Performance report (<https://ctps.org/pub/tdm23_sc/tdm23.1.0/TDM23_Structures%20and%20Performance.pdf>) for details on the trip generation sub-model of the TDM23 model (beginning on page 73).

TDM23 includes two worker-level trip production models, one for each of two trip purposes:

-   **Home-based work trips** are what you would typically think of as commute trips: trips between a person's home and their place of work.

-   **Non-home-based work trips** are trips that begin or end at a person's place of work, but neither begin nor end at that person's home.

TDM23 also includes four household-level trip production models, one for each of four trip purposes:

-   **Home-based personal business:** see Table 30 of the Structures and Performance Report (page 74)

-   **Home-based school:** see Table 30 of the Structures and Performance Report (page 74) (note that university trips are handled in a separate submodel entirely).

-   **Home-based social/recreation:** see Table 30 of the Structures and Performance Report (page 74)

-   **Non-home-based non-work trips** are trips that do not have the home or the work place as a trip end.

How common is each of these trip purposes? The trips data set has two variables that you can use to construct a trip purpose variable that aligns with the above:

-   **WHYTO:** What was the primary activity at the trip destination

-   **WHYFROM:** What was the primary activity at the trip origin.

You can see the codes for the all possible activities here in the online codebook (these are the codes for WHYTO, but they are the same for WHYFROM): <https://nhts.ornl.gov/tables09/CodebookPage.aspx?id=1375>

You may notice that the trips data also has a trip-purpose variable with the following categories:

-   HBO (Home-based other)

-   HBSHOP (Home-based shopping)

-   HBSOCREC (Home-based social recreation)

-   HBW (Home-based work)

-   NHB (non-home-based)

These are slightly different than the categories TDM23 uses, so we'll construct our own trip purpose variable that better aligns with TDM23.

### Link up unlinked trips

For our analysis, it will be better to treat trips 2 and 3 above as a single trip from school to home, so we'll link trips like this together. Here's an easy-ish approach to do that. It would be a little trickier if we wanted to keep track of all the modes that were used on the trip (which we don't need to do for this assignment, but we will need to do on a subsequent assignment).

```{r}
trip_data <- trip_data |>
  mutate(transfer_trip = WHYTO == "07" | WHYFROM == "07")

transfer_trips <- trip_data |>
  filter(transfer_trip) |>
  filter(WHYTO != WHYFROM) # remove trips that begin AND end with a transfer

next_destination <- c(transfer_trips$WHYTO[2:nrow(transfer_trips)], "last")

transfer_trips <- transfer_trips |>
  mutate(next_destination = next_destination) |>
  mutate(WHYTO = ifelse(WHYTO == "07", next_destination, WHYTO)) |>
  filter(WHYFROM != "07") |>
  select(-next_destination)

trip_data <- trip_data |>
  filter(!transfer_trip) |>
  rbind(transfer_trips) |>
  select(-TRPTRANS, -transfer_trip)
```

### Construct trip purposes

Now we can start constructing our trip purpose variable that's consistent with TDM23.

```{r}
home <- c("01", "02")
work <- c("03", "04", "05")
per_bus <- c("06", "11", "12", "14") # excluding healthcare (18) to treat it separately
healthcare <- c("18")
soc_rec <- c("10", "13", "15", "16", "17", "19")

trip_data <- trip_data |>
  mutate(purpose = case_when(
    (WHYTO %in% healthcare & WHYFROM %in% home) | 
    (WHYFROM %in% healthcare & WHYTO %in% home) ~ "HBHC",
    (WHYTO %in% healthcare | WHYFROM %in% healthcare) ~ "NHBHC",
    (WHYTO %in% home & WHYFROM %in% work) | 
    (WHYTO %in% work & WHYFROM %in% home) ~ "HBW",
    (WHYTO %in% work | WHYFROM %in% work) ~ "NHBW",
    (WHYTO %in% home & WHYFROM %in% per_bus) | 
    (WHYTO %in% per_bus & WHYFROM %in% home) ~ "HBPB",
    (WHYTO %in% home & WHYFROM %in% soc_rec) | 
    (WHYTO %in% soc_rec & WHYFROM %in% home) ~ "HBSR",
    (WHYTO %in% home | WHYFROM %in% home) ~ "HBO",
    TRUE ~ "NHBNW"))

```

### Summarize trip purposes

Now we can summarize the number of trips in our sample that are categorized into each trip purpose.

```{r}

trip_data |>
  group_by(purpose) |>
  summarise(`Number of trips (unweighted)` = n()) |>
  mutate(`Percent of trips (unweighted)` = 
           100 * `Number of trips (unweighted)` /
           sum(`Number of trips (unweighted)`)) |>
  arrange(desc(`Percent of trips (unweighted)`)) |>
  kable(format.args = list(big.mark = ","), digits = 1)
```

And here are the estimated numbers of trips in the full population (incorporating survey weights).

```{r}

trip_data |>
  as_survey_design(weights = WTTRDFIN) |>
  group_by(purpose) |>
  survey_tally() |>
  mutate(`Percent of trips (weighted)` =  100*n / sum(n)) |>
  rename(`Number of trips (weighted)` = n) |>
  select(purpose, 
         `Number of trips (weighted)`,
         `Percent of trips (weighted)`) |>
  arrange(desc(`Percent of trips (weighted)`)) |>
  kable(format.args = list(big.mark = ","), digits = 0)
```

*For this assignment, you should select (or define) a trip purpose that is not included in TDM23. You don't need to limit your analysis to weekdays (and in fact, you could limit it to weekends if you want to). You can do an analysis at the household level or at the individual level. If you want, your selected trip purpose can be broader than any in TDM23 (e.g. "all trips") or more narrow (e.g. health care trips). You can also limit your analysis to a particular population (e.g. seniors or households with children). Keep in mind that if you want to learn something about what makes the travel behavior of a particular population unique, you should not limit your analysis to that population. Better to include a broader population in your sample and include a variable to represent the effect of being in your population of interest.*

For the rest of this example, I will focus on home-based work trips (as defined in TDM23), and I will construct an initial model that follows the approach used for TDM23.

## Select and construct predictor variables

TDM23 predicts the number of home-based work trips (at the worker level) using four predictors:

-   Number of household seniors

-   Number of household workers

-   Household vehicle availability category

-   Household income category

In addition, I have included several more predictors:

-   Household composition

-   Mobility issue

-   Medical condition

-   Gender

-   Stopped driving

All of these were also included in the vehicle availability model, and we can construct them at the household level the same way we did for the vehicle availability assignment.

```{r}
n_seniors <- person_data |>
  group_by(HOUSEID) |>
  summarise(n_seniors = n())

hh_data <- hh_data |>
  mutate(
    veh_avail = case_when(
      HHVEHCNT == 0 ~ "Zero",
      DRVRCNT > HHVEHCNT ~ "Insufficient",
      TRUE ~ "Sufficient"
    ),
    income = case_when(
      HHFAMINC %in% c("01", "02", "03") ~ "Low",
      HHFAMINC %in% c("04", "05", "06", "07", "08") ~ "Middle",
      TRUE ~ "High"
    ),
    hh_composition = case_when(
      HHSIZE == 1 ~ "Alone",
      LIF_CYC %in% c("01", "02") ~ "Couple Only",
      TRUE ~ "Multigenerational/Other"
    )
  ) |>
  left_join(n_seniors, by = "HOUSEID") |>
  select(HOUSEID, veh_avail, income, hh_composition, n_seniors)
```

```{r}
seniors <- person_data |>
  select(HOUSEID, PERSONID, age_group, health_status, med_condition, stopped_driving, mobility_aid, R_SEX) |>
  mutate(
    female = R_SEX == "02",
    has_med_condition = med_condition == "Yes",
    stopped_driving = stopped_driving == "Yes",
    mobility_issue = mobility_aid != "None"
  ) |>
  inner_join(hh_data, by = "HOUSEID")
```

```{r}
hb_health_trips <- trip_data |>
  filter(purpose == "HBHC") |>
  group_by(HOUSEID, PERSONID) |>
  summarise(hb_health_trips = n(), .groups = 'drop')

nhb_health_trips <- trip_data |>
  filter(purpose == "NHBHC") |>
  group_by(HOUSEID, PERSONID) |>
  summarise(nhb_health_trips = n(), .groups = 'drop')
```

```{r}
# Combine
hb_senior_analysis_data <- seniors |>
  left_join(hb_health_trips, by = c("HOUSEID", "PERSONID")) |>
  replace_na(list(hb_health_trips = 0))

nhb_senior_analysis_data <- seniors |>
  left_join(nhb_health_trips, by = c("HOUSEID", "PERSONID")) |>
  replace_na(list(nhb_health_trips = 0))
```

## Data visualization

Let's take a look at the distribution of trip counts for each of these trip purposes. Here is the histogram for health care visit trips.

```{r}
ggplot(hb_senior_analysis_data) +
  geom_histogram(aes(x = hb_health_trips),
                 binwidth = 1,
                 color = "gray",
                 fill = "lightgreen") +
  scale_x_continuous(name = "Number of home-based health care visit trips",
                     breaks = seq(0, 8, by=1)) +
  scale_y_continuous(name = "Number of seniors in sample") +
  theme_minimal()
```

```{r}
ggplot(nhb_senior_analysis_data) +
  geom_histogram(aes(x = nhb_health_trips),
                 binwidth = 1,
                 color = "gray",
                 fill = "lightgreen") +
  scale_x_continuous(name = "Number of non-home-based health care visit trips",
                     breaks = seq(0, 8, by=1)) +
  scale_y_continuous(name = "Number of seniors in sample") +
  theme_minimal()
```

Most seniors have zero recorded healthcare trips on the survey day, with a relatively small portion making one or two, and very few making more than two. This heavily skewed distribution suggests that these trip counts are not normally distributed, so a basic linear regression model may be unsuitable. Because trip counts are discrete and show a high share of zeroes, a count-data modeling approach such as Poisson or negative binomial regression is more appropriate. If there is large mass at zero, zero-inflated may be especially useful in capturing the underlying distribution more accurately.

```{r}
hb_senior_analysis_data |>
  summarise(`Average count of HBHC trips` = mean(hb_health_trips),
            `Standard deviation` = sd(hb_health_trips)) 
```

```{r}
nhb_senior_analysis_data |>
  summarise(`Average count of HBHC trips` = mean(nhb_health_trips),
            `Standard deviation` = sd(nhb_health_trips)) 
```

For home-based work trips, the mean and standard deviation are both about one, so a poisson regression might be appropriate.

## Estimate models

I'm going to demonstrate the following types of models:

-   Linear regression

-   Poisson regression

-   Zero-inflated Poisson regression

-   Discrete choice (review)

### Zero-inflated Poisson regression

Both models we've tried under-estimate the number of workers who made zero home-based work trips. We could try a zero-inflated model. A zero-inflated model estimates two models simultaneously: one for the likelihood that the outcome will be zero, and another for the value of the outcome, conditional on it not being zero. Here is how you would estimate a zero-inflated Poisson model with same set of predictors for the binomal part of the model (whether the worker made zero home-based work trips) and the Poisson part of the model (how many trips they made, if they made any).

```{r}
hbhc_model <- zeroinfl(hb_health_trips ~ n_seniors + veh_avail + income + age_group + hh_composition+ has_med_condition + stopped_driving + mobility_issue + female, 
   data = hb_senior_analysis_data, dist = "poisson")

summary(hbhc_model)

View(hbhc_model)
```

```{r}
nhbhc_model <- zeroinfl(nhb_health_trips ~ n_seniors + veh_avail + income + age_group + hh_composition+ has_med_condition + stopped_driving + mobility_issue + female, 
   data = nhb_senior_analysis_data, dist = "poisson")

summary(nhbhc_model)
```
