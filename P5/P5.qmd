---
title: "P5: Mode Choice"
format: 
  html:
    theme: minty
    toc: true
    toc-location: left
editor: visual
---

The purpose of this assignment is for you to get some experience estimating and interpreting a logistic regression model. You will use data from the 2017 National Household Travel Survey to predict the likelihood that a short trip (less than 1.5 miles) for a particular trip purpose and/or by a particular population will take place by walking.

In Assignment P2, You got some experience with discrete choice models for choices with more than two options. Logistic regression is appropriate (and simpler) when you are modeling a choice that has only two options.

## Load libraries

This analysis uses the following packages:

```{r, message=FALSE, warning=FALSE}
library(tidyverse)
library(here)
library(knitr)
library(srvyr)
library(tidycensus)
library(jtools)
library(officer) 
library(stargazer)

```

## Load dataset

This will be an analysis of trip-level data from the National Household Travel Survey. You will have already downloaded this data as part of assignment P2.

```{r}
trips <- here("data",
              "NHTS",
              "trippub.csv") |>
  read_csv(show_col_types = FALSE)
```

I'm also going to include some person-level data, so I'll load that dataset as well.

```{r}
people <- here("data",
               "NHTS",
               "perpub.csv") |>
  read_csv(show_col_types = FALSE)
```

## Filter sample

I will be filtering my data by trip purpose, by population, and by trip distance. For your own assignment, you do not need to filter by both trip purpose and population. You might choose one or the other.

### 

### Filter for selected population

Any number of variables might define your population of interest. Many of these are include in the trips file, but you might find (or construct) additional values from other files (for example, to identify people in households that own electric vehicles, you'd need to join data from the vehicles file).

### Filter for trip distance

I want to identify trip that could conceivably be considered to be withing walking distance, which I'll define as being less than a mile and a half.

```{r}

short_trips <- trips |>
  filter(TRPMILAD < 1.5)

nrow(short_trips)
```

This leaves me with a sample of 234,910 trips.

## Generate outcome variable

I want to predict the likelihood that a given trip will take place by active transport vs. motorized

```{r}

short_visit_trips <- short_trips |>
  mutate(
    Mode = case_when(
      TRPTRANS %in% c("01", "02") ~ 1,
      TRPTRANS %in% c("03", "04", "05", "06", "17", "18") ~ 0
    )
  )
```

"Walk and Bicycle" = 1

"Car/Motorized" = 0

```{r, message=FALSE}

short_visit_trips |>
  filter(!is.na(Mode)) |>
  mutate(Mode = factor(Mode, levels = c(1, 0))) |>
  group_by(Mode) |>
  summarise(`Number of trips` = n()) |>
  mutate(`Percent of trips` = paste0(round(100 * `Number of trips` / sum(`Number of trips`)), "%")) |>
  kable()
```

```{r, message=FALSE}


short_visit_trips |>
  as_survey_design(weights = WTTRDFIN) |>
  mutate(
    Mode = factor(
      case_when(
        TRPTRANS %in% c("01", "02") ~ 1,
        TRPTRANS %in% c("03", "04", "05", "06", "17", "18") ~ 0
      ),
      levels = c(1, 0)
    )
  ) |>
  filter(!is.na(Mode)) |>
  group_by(Mode) |>
  survey_tally(vartype = "ci") |>
  mutate(`Estimated percent of trips` = paste0(round(100 * n / sum(n)), "%"),
         `Lower estimate (95% confidence)` = paste0(round(100 * n_low / sum(n)), "%"),
         `Upper estimate (95% confidence)` = paste0(round(100 * n_upp / sum(n)), "%")) |>
  select(Mode,
         `Estimated percent of trips`,
         `Lower estimate (95% confidence)`,
         `Upper estimate (95% confidence)`) |>
  kable()
```

## Choose predictor variables

I'm going to predict the likelihood of a trip taking place by active transport (walk and bike) based on the following predictors:

-   Distance (TRPMILES)

-   Age (R_AGE)

-   Count of Walk Trips for Exercise (WALK4EX)

-   Disability status (MEDCOND)

-   Level of Physical Activity (PHYACT)

-   Opinion on health (HEALTH)

-   Population density in the census block group of the trip destination (DBPPOPDN)

-   Gender (R_SEX)

-   Count of Public Transit Usage (PTUSED)

Most of these are already available in the dataset, and I just need to filter out the missing values. I will need to construct a value for income and vehicle availability.

### Distance

Let's look at the distribution of trip distances.

```{r}

ggplot(short_visit_trips) +
  geom_histogram(aes(x = TRPMILES),
                 color = "gray",
                 fill = "cornsilk",
                 bins = 40) +
  scale_x_continuous(name = "Trip distance (miles)") +
  scale_y_continuous(name = "Number of trips in sample") +
  theme_minimal()
```

Missing values for distance are coded as -9, so I'll filter out negative numbers

```{r}

sample_trips <- short_visit_trips |>
  filter(TRPMILES >=0)

ggplot(sample_trips) +
  geom_histogram(aes(x = TRPMILES),
                 color = "gray",
                 fill = "cornsilk",
                 binwidth = 0.1) +
  scale_x_continuous(name = "Trip distance (miles)",
                     breaks = seq(0, 1.5, by=0.1)) +
  scale_y_continuous(name = "Number of trips in sample") +
  theme_minimal()
```

### Age

Let's look at the distribution of ages within our sample. Note that the age of everyone older than 88 is recorded as being 92. Something to be aware of.

```{r}
sample_trips <- short_visit_trips |>
  filter(R_AGE >= 0)

ggplot(sample_trips) +
  geom_histogram(aes(x = R_AGE),
                 color = "gray",
                 fill = "cornsilk",
                 binwidth = 1) +
  scale_x_continuous(name = "Traveler's age (years)",
                     breaks = seq(0, 100, by=5)) +
  scale_y_continuous(name = "Number of trips in sample") +
  theme_minimal()
```

### Count of Walk Trips for Exercise (WALK4EX)

```{r}
walk_data <- people %>%
  select(HOUSEID, PERSONID, WALK4EX) %>%
  mutate(WALK4EX = as.numeric(WALK4EX)) %>%
  filter(WALK4EX >= 0 & WALK4EX <= 99)

sample_trips <- sample_trips %>%
  left_join(walk_data, by = c("HOUSEID", "PERSONID"))

walk_summary <- sample_trips %>%
  filter(!is.na(WALK4EX)) %>%
  group_by(WALK4EX) %>%
  summarise(count = n(), .groups = "drop") %>%
  arrange(WALK4EX) 

ggplot(walk_summary, aes(x = factor(WALK4EX), y = count)) +
  geom_bar(stat = "identity", fill = "cornsilk", color = "gray") +
  labs(title = "Distribution of Walk Trips for Exercise",
       x = "Number of Walk Trips for Exercise (WALK4EX)",
       y = "Count of Trips") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
```

### Disability

This is the answer to the question "Does this person have a condition or disability that makes it difficult to travel outside the home?" where a value of "01" means yes. We'll set this up as a logical (binary) variable.

This variable is only in the person file, so we'll need to join that data to the trips file.

```{r, message=FALSE}

disability_data <- people |>
  select(HOUSEID, PERSONID, MEDCOND)

sample_trips <- sample_trips |>
  left_join(disability_data) |>
  mutate(disability = MEDCOND == "01")

sample_trips |>
  group_by(disability) |>
  summarise(`Number of trips` = n()) |>
  mutate(`Percent of trips` = 
           paste0(round(100*`Number of trips`/sum(`Number of trips`)), "%")) |>
  kable()

ggplot(walk_summary, aes(x = factor(WALK4EX), y = count)) +
  geom_bar(stat = "identity", fill = "cornsilk", color = "gray") +
  labs(
       x = "Number of Walk Trips for Exercise (WALK4EX)",
       y = "Count of Trips") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
```

### Level of Physical Activity (PHYACT)

```{r}
phyact_data <- people |>
  select(HOUSEID, PERSONID, PHYACT) |>
  filter(PHYACT %in% c("01", "02", "03")) |>
    mutate(PHYACT = recode(PHYACT,
                         "01" = "Rarely",
                         "02" = "Moderate",
                         "03" = "Vigorous"))

sample_trips <- sample_trips |>
  left_join(phyact_data, by = c("HOUSEID", "PERSONID"))

disability_data <- sample_trips %>%
  group_by(disability) %>%
  summarise(`Number of trips` = n(), .groups = "drop") %>%
  mutate(`Percent of trips` = round(100 * `Number of trips` / sum(`Number of trips`), 1),
         Disability_Status = if_else(disability, "Disability", "No Disability"))

disability_data %>%
  select(-disability) %>%
  kable()
```

### Opinion on Health

```{r}
health_data <- people %>%
  select(HOUSEID, PERSONID, HEALTH) %>%
  filter(HEALTH %in% c("01", "02", "03", "04", "05")) %>%
  mutate(HEALTH_LABEL = recode(HEALTH,
                               "01" = "Excellent",
                               "02" = "Very good",
                               "03" = "Good",
                               "04" = "Fair",
                               "05" = "Poor"))

sample_trips <- sample_trips %>%
  left_join(health_data, by = c("HOUSEID", "PERSONID"))
```

```{r}
health_summary <- sample_trips %>%
  filter(!is.na(HEALTH_LABEL)) %>%
  group_by(HEALTH_LABEL) %>%
  summarise(`Number of trips` = n(), .groups = "drop") %>%
  mutate(`Percent of trips` = 100 * `Number of trips` / sum(`Number of trips`))

ggplot(health_summary, aes(x = factor(HEALTH_LABEL, 
                                        levels = c("Excellent", "Very good", "Good", "Fair", "Poor")),
                           y = `Number of trips`)) +
  geom_bar(stat = "identity", fill = "cornsilk", color = "gray") +
  geom_text(aes(label = paste0(round(`Percent of trips`), "%")),
            vjust = -0.5, size = 3) +
  labs(
       x = "Health Status",
       y = "Number of Trips") +
  theme_minimal()
```

### Density

Densities are coded as categories, with a -9 to indicate missing values, so we'll filter those out.

Let's look at the distribution of population densities at the trip destinations.

```{r}
sample_trips <- sample_trips |>
  filter(DBPPOPDN > 0)

density_values <- c(50, 300, 750, 1500, 3000, 7000, 17000, 30000)

ggplot(sample_trips) +
  geom_histogram(aes(x = DBPPOPDN),
                 color = "gray",
                 fill = "cornsilk",
                 bins = 30) +
  scale_x_continuous(breaks = density_values,
                 labels = density_values,
                 transform = "log",
                 name = paste0("Population density of destination\n",
                               "block group (people per sq-mi)")) +
  scale_y_continuous(name = "Number of trips in sample") +
  theme_minimal()
```

### Gender

Let's look at the gender values in our sample data.

```{r}

sample_trips |>
  group_by(R_SEX) |>
  summarise(`Number of trips` = n())
```

Once again, negative values represent missing data. There was one trip by a person who declined to answer the question about their gender. We'll remove this trip from the data set and recode the variable as a true/false indicator for whether the trip is by a woman.

```{r}

sample_trips <- sample_trips |>
  filter(R_SEX != "-7") |>
  mutate(female = R_SEX == "02")
```

### Count of Public Transit Usage (PTUSED)

```{r}
ptused_data <- people |>
  select(HOUSEID, PERSONID, PTUSED) |>
  filter(PTUSED >= 0 & PTUSED <= 30)

sample_trips <- sample_trips |>
  left_join(ptused_data, by = c("HOUSEID", "PERSONID"))

sample_trips |>
  filter(!is.na(PTUSED)) |>
  group_by(PTUSED) |>
  summarise(`Number of trips` = n(), .groups = "drop") |>
  mutate(`Percent of trips` = paste0(round(100 * `Number of trips` / sum(`Number of trips`)), "%")) |>
  kable()
```

```{r}
ptused_summary <- sample_trips %>%
  filter(!is.na(PTUSED)) %>%
  group_by(PTUSED) %>%
  summarise(Number_of_trips = n(), .groups = "drop") %>%
  mutate(Percent_of_trips = 100 * Number_of_trips / sum(Number_of_trips))

# Plot the bar graph:
ggplot(ptused_summary, aes(x = factor(PTUSED), y = Number_of_trips)) +
  geom_bar(stat = "identity", fill = "cornsilk", color = "gray") +
  geom_text(aes(label = paste0(round(Percent_of_trips), "%")),
            vjust = -0.5, size = 3) +
  labs(
       x = "PTUSED (0-30)",
       y = "Number of Trips") +
  theme_minimal()
```

### Final sample size

```{r}
sample_trips_filtered_clean <- sample_trips %>%
  select(PTUSED, 
         female, 
         HEALTH_LABEL, 
         HEALTH, 
         PHYACT, 
         disability, 
         WALK4EX, 
         Mode, 
         DBPPOPDN, 
         TRPMILES, 
         R_AGE) %>%
  drop_na()
```

```{r}
nrow(sample_trips_filtered_clean)


```

After removing trips with missing values, we have a final sample size of 187548 trips.

## Estimate model

Now I can estimate a logistic regression model predicting the likelihood that a trip will take place by walking. A logistic regression is similar to a linear regression model, but instead of predicting the value of a continuous variable, it predicts the log (natural logarithm) of the odds of something occurring, where the odds are the ratio of the probability that it will happen to the probability that it won't happen. For example, the odds of walking would be:

$$
odds_{walk} = \frac{p_{walk}}{1 - p_{walk}}
$$

```{r}
sample_trips <- sample_trips %>%
  mutate(
    HEALTH_LABEL = factor(HEALTH_LABEL, levels = c("Poor", "Fair", "Good", "Very good", "Excellent")),
    PHYACT = factor(PHYACT, levels = c("Rarely", "Moderate", "Vigorous"))
  )


model <- glm(Mode ~ PTUSED +
                    female +
                    HEALTH_LABEL +
                    PHYACT +
                    disability +
                    WALK4EX +
                    DBPPOPDN +
                    TRPMILES +
                    R_AGE,
             data = sample_trips,
             family = binomial())
         
```

```{r}
coeff_labels <- c("Public Transit Usage" = "PTUSED",
                  "Female" = "femaleTRUE",
                  "Health: Fair" = "HEALTH_LABELFair",
                  "Health: Good" = "HEALTH_LABELGood",
                  "Health: Very good" = "HEALTH_LABELVery good",
                  "Health: Excellent" = "HEALTH_LABELExcellent",
                  "Physical Activity (Moderate)" = "PHYACTModerate",
                  "Physical Activity (Vigorous)" = "PHYACTVigorous",
                  "Disability status" = "disabilityTRUE",
                  "Walk for Exercise" = "WALK4EX",
                  "Population density" = "DBPPOPDN",
                  "Trip distance (miles)" = "TRPMILES",
                  "Age (years)" = "R_AGE")

export_summs(model, 
             robust = "HC3", 
             coefs = coeff_labels,
             error_format = "(p = {p.value})",
             error_pos = "right")
```

As a note, you can export that model summary to a Microsoft Word document. It might not be formatted exactly how you would like, but it could save you some typing.

```{r, eval=FALSE}

summary(model)
stargazer(model, type = "text")

```

It looks like the model supports the following conclusions:

-   People are less likely to walk for longer trips

-   People with mobility-related disabilities are less likely to walk

-   People in walking to/in higher density areas are more likely to walk

-   Higher-income people are more likely to walk

-   People in zero-vehicle households are more likely to walk

Interpreting these coefficients directly (beyond just their direction and significance) is not terribly intuitive, but we can visualize some predicted probabilities.

Here is a plot of the predicted probabilities of choosing active transport different variables in the model, holding all other predictors at their average (for continuous predictors) or reference (for categorical predictors) values.

The `effect_plot` function also works for categorical predictors.

```{r}

effect_plot(model, pred = "HEALTH_LABEL", interval = TRUE) +
  scale_y_continuous(name = "Probability of Choosing Active Transport in 1.5 Mile Trip",
                     breaks = seq(0.11, 0.23, by = 0.01),
                     labels = paste0(seq(0.11, 0.23, by = 0.01) * 100, "%")) +
  scale_x_discrete(name = "Self-rated Health Status",
                   labels = c("Poor", "Fair", "Good", "Very good", "Excellent")) +
  ggtitle("Effect of Health Status on Active Transport Probability")
  
```

```{r}
effect_plot(model, pred = "PHYACT", interval = TRUE) +
  scale_y_continuous(name = "Probability of Choosing Active Transport in 1.5 Mile Trip",
                     breaks = seq(0.11, 0.23, by = 0.01),
                     labels = paste0(seq(0.11, 0.23, by = 0.01) * 100, "%")) +
  scale_x_discrete(name = "Level of Physical Activity",
                   labels = c("Rarely", "Moderate", "Vigorous")) +
  ggtitle("Effect of Physical Activity on Walking Probability")
```

```{r}
effect_plot(model, pred = "PTUSED", interval = TRUE) +
  scale_x_continuous(name = "Count of Public Transit Usage",
                     breaks = seq(0, 30, by = 5)) +
  scale_y_continuous(name = "Probability of Choosing Active Transport in 1.5 Mile Trip",
                     breaks = seq(0, 0.8, by = 0.1),
                     labels = paste0(seq(0, 0.8, by = 0.1) * 100, "%"))
```
